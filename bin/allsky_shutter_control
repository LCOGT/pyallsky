#!/usr/bin/env python

# Control the shutter on an SBIG AllSky 340/340C

import sys
import logging
import argparse

from pyallsky import AllSkyCamera
from pyallsky import setup_logging

def main():
    desc = '''Control the shutter on an SBIG AllSky 340/340C Camera'''
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('-d', '--device', help='Path to serial device', default='/dev/usbserial')
    parser.add_argument('-v', '--verbose', action='count', help='Enable script debugging', default=0)
    parser.add_argument('shutter_state', help='"open" or "closed"', default='open')
    args = parser.parse_args()

    # logging levels
    if args.verbose >= 1:
        setup_logging(logging.DEBUG)
    else:
        setup_logging(logging.INFO)

    if len(args.shutter_state) < 1:
        logging.error('Invalid shutter state given: "%s"', args.shutter_state)
        logging.error('Please use "open" or "closed"')
        sys.exit(1)

    state = args.shutter_state[0].lower()
    if state not in ('o', 'c'):
        logging.error('Invalid shutter state given: "%s"', args.shutter_state)
        logging.error('Please use "open" or "closed"')
        sys.exit(1)

    camera = AllSkyCamera(args.device)

    if state == 'o':
        logging.info('Opening shutter')
        camera.open_shutter()
        logging.info('Shutter open')
    else:
        logging.info('Closing shutter')
        camera.close_shutter()
        logging.info('Shutter closed')

    sys.exit(0)

if __name__ == '__main__':
    main()

# vim: set ts=4 sts=4 sw=4 et:
